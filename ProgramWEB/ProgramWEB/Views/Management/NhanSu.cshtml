@{
    ViewBag.Title = "Quản lý nhân sự"; 
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pageNow =
    new LocationPage(DefinePage.home,
        new LocationPage(DefinePage.management,
            new LocationPage(DefinePage.management_NhanSu)));
}
@section cssContent {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    <link href="~/Contents/main/css/management.css" rel="stylesheet" />
    <link href="~/Contents/loader/style.css" rel="stylesheet" />
    <link href="~/Contents/alert-f8/style.css" rel="stylesheet" />
}
@using ProgramWEB.Models.Data;
@using ProgramWEB.Define;
@using ProgramWEB.Libary;
<div class="content-wrapper">
</div>
@section jsContent {
    <script src="~/Scripts/export-file/dist/table2excel.js"></script>
    <script src="~/Contents/alert-f8/script.js"></script>
    <script src="~/Scripts/management/main.js"></script>
    <script>
        $('#main').addClass('gird wide');
        var root = $('.content-wrapper');
        var dauCach = '&nbsp;';
        var namePage = 'nhân sự';
        var error;
        var success;
        var page = 1;
        var pageSize = 10;
        var json = JSON.parse("@ViewBag.jsonString".replace(/&quot;/g, '"'));
        var countData = -1;
        var nameItems = json["nameModel"];
        var nameTiengViets = json["nameRender"];
        var sortBy = json["sortBy"];
        var findBy = json["findBy"];
        var hanhDong = json["action"];
        var sortTangDan = true;
        var count = nameTiengViets.length;
        var datas = [{}];
        var nameObj = [{}];
        for (let index = 0; index < count; index++) {
            this.nameObj[nameTiengViets[index]] = { type: "", id: "", using: "" }
            this.nameObj[nameTiengViets[index]].id = removeVietnameseTones(nameTiengViets[index].replace(/ /g, ''));
            this.nameObj[nameTiengViets[index]].using = true;
        }
        var createRowTable = function (item, item1, index, id) {
            let using = nameObj[nameTiengViets[index]].using;
            let idName = nameObj[nameTiengViets[index]].id + '-' + id;
            let data = item[item1];
            switch (index) {
                case 2:
                    return `
                        <td class="${using ? "" : "d-none"}"
                            id="${idName}">${data != null ? ((data == true || data == 'true') ? 'Nam' : 'Nữ') : 'Không biết'}
                        </td >
                    `
                case 3:
                case count - 1:
                    return `
                        <td class="${using ? "" : "d-none"}"
                            id="${idName}">${data ? toDateView(data) : ''}
                        </td >
                    `;
            }
            return `
            <td class="${using ? "" : "d-none"}"
               id="${idName}">${data ? data : ''}
            </td >
            `;
        }
        var createActionOnRow = function (id) {
            return `
            <td class="d-flex flex-row flex-nowrap">
                ${hanhDong.view ?
                `<a href="@(DefinePage.profile_ThanhVien.url)?ma=${id}"
                    class="btn btn-sm mr-1"
                    style="background-color: green; color: white; margin-right: 5px">
                    <i class="fa-solid fa-address-card"></i>
                    Xem
                </a>` : ''}
                ${hanhDong.edit ?
                `<a href="#!"
                        class="btn btn-primary btn-sm mr-1 edit" onclick="openEdit(this)">
                        <i class="fas fa-edit"></i>
                        Sửa
                </a>` : ''}
                ${hanhDong.delete ? 
                `<a href="#!"
                    class="btn btn-sm mr-1 nut-xoa-hang" id="nut-xoa-hang-${id}"
                    style="background-color: red; color: white; margin-left: 5px">
                    <i class="fas fa-times" style="color: white"></i>
                    Xóa
                </a>` : ''}
            </td>
            `
        }
        var createInputFormAddOrUpdate = function (thaotac, result, item, index, id) {
            let data = result[nameObj[item].id] ? (result[nameObj[item].id]).trim() : "";
            let idName = nameObj[item].id + '-' + thaotac + (thaotac != 'search' ? '-' + id : '');
            switch (index) {
                case 2:
                    return `
                    <div>
                        <input type="radio" name="${idName}" value="nam"
                            id="nam-${idName}" ${data == 'Nam' || data == 'true' ? "checked" : ""} class="input-radio-${thaotac}" value='1'>
                        <label for="nam-${idName}">Nam</label>
                        <input type="radio" name="${idName}" value="nu"
                            id="nu-${idName}" ${data == 'Nữ' || data == 'false' ? "checked" : ""} class="input-radio-${thaotac}" value='0'>
                        <label for="nu-${idName}">Nữ</label>
                        ${
                        thaotac != 'search' ? "" : 
                        `
                        <input type="radio" name="${idName}" value="all"
                            id="${idName}-all" class="input-radio-${thaotac}" value='-1' ${!data ? 'checked' : ''}>
                        <label for="${idName}-all">Tất cả</label>
                        `
                        }
                    </div>`
                case 3:
                    return `
                    <input type="date" name="${idName}" id="${idName}" class="form-control input-${thaotac}"
                        value="${data.length >= 8 ? toDateInput(data) : ""}"
                            placeholder="Nhập ${item.toLowerCase()}">
                    `
                case count - 1:
                    return thaotac == 'add' ? `
                        <input type="date" name="${idName}" id="${idName}" class="form-control input-${thaotac} dateNowOutput"
                            value="${data.length >= 8 ? toDateInput(data) : ""}"
                                placeholder="Nhập ${item.toLowerCase()}">
                        ` : 
                        `
                        <input type="date" name="${idName}" id="${idName}" class="form-control input-${thaotac}"
                            value="${data.length >= 8 ? toDateInput(data) : ""}"
                                placeholder="Nhập ${item.toLowerCase()}">
                        `
                case 5:
                    return `
                    <input type="email" name="${idName}" id="${idName}" class="form-control input-${thaotac}"
                        value="${data}"
                            placeholder="Nhập ${item.toLowerCase()}">
                    `
            }
            return `<input type="text" name="${idName}" id="${idName}" class="form-control input-${thaotac}"
                value="${data}"
                placeholder="Nhập ${item.toLowerCase()}">`
        }
        var convertDataToServer = function (item, index) {
            switch (index) {
                case 2:
                    return $('#nam-' + item).prop('checked') ? 'true' : ($('#nu-' + item).prop('checked') ? 'false' : null);
            }
            return $('#' + item).val() ? $('#' + item).val().trim() : null;
        }
        var checkDataToServer = function (item, index) {
            if (item == null || item.length == 0)
                return "Trường này không được để trống"
            switch (index) {
                case 4: {
                    var vnf_regex = /((09|03|07|08|05)+([0-9]{8})\b)/g;
                    if (vnf_regex.test(item) == false) {
                        return 'Số điện thoại của bạn không đúng định dạng!';
                    } else {
                        return undefined
                    }
                }
                case 5: {
                    if (validateEmail(item))
                        return undefined
                    return "Email nhập không đúng định dạng"
                }
                case 7: {
                    if (item.length != 12)
                        return "Số căn cước công dân phải chứa đúng 12 ký tự"
                    return undefined
                }
            }
            return undefined;
        }
        setting(namePage)
        load()
    </script>
}